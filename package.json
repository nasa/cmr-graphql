{
  "name": "cmr-graphql",
  "root": true,
  "version": "1.0.0",
  "description": "GraphQL API for NASA's Common Metadata Repository",
  "graphdoc": {
    "endpoint": "http://localhost:3013/graphql",
    "output": "./doc/schema"
  },
  "maintainers": [
    {
      "name": "Earthdata Search",
      "email": "support@earthdata.nasa.gov"
    }
  ],
  "scripts comments": {
    "preinstall": "install dependencies for the application stack",
    "run-synth": "generate the CloudFormation template and bundle assets for the application stack",
    "watch": "run run-synth on file changes",
    "prestart": "run run-synth before starting the local API Gateway to ensure the application is bundled"
  },
  "scripts": {
    "preinstall": "cd cdk/graphql && npm ci",
    "run-synth": "cd cdk/graphql && npm run cdk synth -- --quiet",
    "watch": "onchange 'src/**' -- npm run run-synth",
    "prestart:app": "npm run run-synth",
    "offline": "sam local start-api -t ./cdk/earthdata-access/cdk.out/earthdata-access-dev.template.json --warm-containers LAZY --port 5001 --docker-network host",
    "start:app": "node bin/start.js",
    "start-prod": "dotenvx run -f .env.prod -- npm run start:app",
    "start-uat": "dotenvx run -f .env.uat -- npm run start:app",
    "start-sit": "dotenvx run -f .env.sit -- npm run start:app",
    "start-local": "dotenvx run -f .env.local -- npm run start:app",
    "test": "vitest --config vitest.config.js",
    "silent-test": "vitest --config vitest.config.js --silent",
    "lint": "eslint .",
    "deploy-infrastructure": "cd cdk/graphql-infrastructure && npm ci --include=dev && npm run cdk deploy -- --progress events --require-approval never",
    "deploy-application": "cd cdk/graphql && npm ci --include=dev && npm run cdk deploy -- --progress events --require-approval never"
  },
  "devDependencies": {
    "@rollup/plugin-graphql": "^2.0.4",
    "@vitest/coverage-istanbul": "^1.4.0",
    "aws-sdk-client-mock": "^4.0.0",
    "concurrently": "^9.1.2",
    "esbuild": "^0.20.2",
    "nock": "^13.5.4",
    "onchange": "^7.1.0",
    "snyk": "^1.1283.0",
    "vitest": "^1.4.0"
  },
  "dependencies": {
    "@apollo/server": "^4.10.2",
    "@as-integrations/aws-lambda": "^3.1.0",
    "@aws-sdk/client-lambda": "^3.540.0",
    "@aws-sdk/client-s3": "^3.540.0",
    "@babel/core": "^7.24.3",
    "@babel/eslint-parser": "^7.24.1",
    "@babel/preset-env": "^7.24.3",
    "@dotenvx/dotenvx": "^1.31.0",
    "@edsc/eslint-config": "^0.0.5",
    "@graphql-tools/merge": "^9.0.3",
    "@graphql-tools/schema": "^10.0.3",
    "array-foreach-async": "^1.0.1",
    "axios": "^1.6.8",
    "babel-loader": "^9.1.3",
    "camelcase-keys": "^9.1.3",
    "dasherize": "^2.0.0",
    "dataloader": "^2.2.2",
    "eslint": "^8.57.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-cypress": "^2.15.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-import-newlines": "^1.4.0",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-react": "^7.34.1",
    "graphql": "^16.8.1",
    "graphql-middleware": "^6.1.35",
    "graphql-parse-resolve-info": "^4.13.0",
    "graphql-shield": "^7.6.5",
    "graphql-tag": "^2.12.6",
    "graphql-type-json": "^0.3.2",
    "jsonwebtoken": "^9.0.2",
    "jwks-rsa": "^3.1.0",
    "lodash": "^4.17.21",
    "qs": "^6.12.0",
    "snakecase-keys": "^6.0.0",
    "stellate": "^2.11.1",
    "uuid": "^9.0.1"
  },
  "overrides": {
    "graphql-parse-resolve-info": {
      "graphql": "$graphql"
    }
  }
}
