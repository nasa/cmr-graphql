type OrderOption {
  "The list of concepts and any data on the relationship between this order option and other permitted concepts"
  associationDetails: JSON

  "The concept ID created by CMR for this order option"
  conceptId: String!

  "Indicates if the definition is deprecated. Deprecated definitions will be returned to the client and will be considered valid when validating an order, however new order items cannot be added using the definition and existing order items cannot be updated using the definition. This flag is ignored when creating an option definition, however it will always be set and returned once the definition has been created."
  deprecated: Boolean

  "The description is a longer, human-readable description of the order option type or contents, intended for client display."
  description: String

  "Contents must conform to ECHO Forms schema. See the ECHO Forms Specification for more information."
  form: String

  "The name is a shortened name used to distinguish between other option definitions."
  name: String

  "The native ID to set on the order option."
  nativeId: String

  "The provider ID to set on the order option."
  providerId: String

  "The revision date for the order option."
  revisionDate: String

  "The revision id for the order option."
  revisionId: String

  "There are two levels of order options, provider and system. Only administrators may add system level options and only providers may add provider level options."
  scope: OrderOptionScopeType

  "The sort key is used to indicate the preferred display order among other definitions."
  sortKey: String

  "Return a list of associated collections for this order option."
  collections (
    "Collections query parameters"
    params: CollectionsInput
  ): CollectionList
}

type OrderOptionList {
  "The number of hits for a given search."
  count: Int

  "Cursor that points to the/a specific position in a list of requested records."
  cursor: String

  "The list of orderOption search results."
  items: [OrderOption]
}

input OrderOptionsInput {
  "The unique concept ID assigned to the order-option."
  conceptId: [String]

  "Cursor that points to the/a specific position in a list of requested records."
  cursor: String

  "The number of variables requested by the user."
  limit: Int

  "Zero based offset of individual results."
  offset: Int

  "The provider ID."
  providerId: [String]
}

input OrderOptionInput {
  "The unique concept ID assigned to the order-option."
  conceptId: String
}

type Query {
  "Query for a single Order Option."
  orderOption(
    "The order option query parameters."
    params: OrderOptionInput
  ): OrderOption

  "Query for Order Options."
  orderOptions(
    "The order option query parameters."
    params: OrderOptionsInput
  ): OrderOptionList!
}

type OrderOptionMutationResponse {
  "The concept ID of the draft."
  conceptId: String!

  "The revision ID of the draft."
  revisionId: String!
}

enum OrderOptionScopeType {
  PROVIDER
  SYSTEM
}

type Mutation {
  "Create a new order option."
  createOrderOption(
    "The description is a longer, human-readable description of the order option type or contents, intended for client display."
    description: String

    "Contents must conform to ECHO Forms schema. See the ECHO Forms Specification for more information."
    form: String

    "The native ID for the order option."
    nativeId: String

    "The name is a shortened name used to distinguish between other option definitions. This field must be unique per provider and is restricted to 30 characters."
    name: String

    "The provider ID for the order option."
    providerId: String!

    "There are two levels of order options, provider and system. Only administrators may add system level options and only providers may add provider level options."
    scope: OrderOptionScopeType

    "The sort key is used to indicate the preferred display order among other definitions"
    sortKey: String
  ): OrderOptionMutationResponse

  "Update an existing order option."
  updateOrderOption(
    "Indicates if the definition is deprecated. Deprecated definitions will be returned to the client and will be considered valid when validating an order, however new order items cannot be added using the definition and existing order items cannot be updated using the definition. This flag is ignored when creating an option definition, however it will always be set and returned once the definition has been created."
    deprecated: Boolean

    "The description is a longer, human-readable description of the order option type or contents, intended for client display."
    description: String

    "Contents must conform to ECHO Forms schema. See the ECHO Forms Specification for more information."
    form: String

    "The name is a shortened name used to distinguish between other option definitions. This field must be unique per provider and is restricted to 30 characters."
    name: String

    "The native ID for the order option."
    nativeId: String!

    "The provider ID for the order option."
    providerId: String!

    "There are two levels of order options, provider and system. Only administrators may add system level options and only providers may add provider level options."
    scope: OrderOptionScopeType

    "The sort key is used to indicate the preferred display order among other definitions"
    sortKey: String
  ): OrderOptionMutationResponse

  "Delete an existing order option."
  deleteOrderOption(
    "The native ID of the order option to be deleted."
    nativeId: String!

    "The provider ID of the order option to be deleted."
    providerId: String!
  ): OrderOptionMutationResponse
}
