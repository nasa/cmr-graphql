type Acl {
  "The unique concept id assigned to the Acl."
  conceptId: String

  "The revision id for the Acl."
  revisionId: Int

  "The type of identity (provider, system, catalog_item)."
  identityType: String

  "The name of the Acl."
  name: String

  "An URL to retrieve the Acl."
  location: String

  "List of groups and their permissions to the catalog item associated with this Acl."
  groups: AclGroupList

  "The GUID from Legacy Services that was used during migrations, this value should no longer be referenced."
  legacyGuid: String @deprecated(reason: "This field was temporary and is being deprecated.")

  "Identifies sets of catalog items (collections and granules) owned by a provider."
  catalogItemIdentity: CatalogItemIdentity

  "Identifies a system level thing in the CMR."
  systemIdentity: JSON

  "Identifies a type of object owned by a specific provider."
  providerIdentity: JSON

  "Full JSON of the Acl."
  acl: JSON @deprecated(reason: "Deprecating in favor of `groupPermissions`, `legacyGuid`, `catalogItemIdentity`.")

  "Returns the list of collections associated with this Acl."
  collections (
    "Collections query parameters"
    params: CollectionsInput
  ) : CollectionList
}

type CatalogItemIdentity {
  "Is collection applicable for a ACL"
  collectionApplicable: Boolean

  "The collection information"
  collectionIdentifier: JSON

  "Is granule applicable for a ACL"
  granuleApplicable: Boolean

  "The granule information"
  granuleIdentifier: JSON

  "The provider id of the permission"
  providerId: String
}

type AclGroupList {
  "The number of hits for a given search."
  count: Int

  "The list of group search results."
  items: [AclGroup]
}

type AclGroup {
  "The unique id assigned to the group."
  id: String

  "The UID of the application that created the group."
  appUid: String

  "The client ID of the application that created the group."
  clientId: String

  "Name of the group."
  name: String

  "Description of the group."
  description: String

  "Is the group shared."
  sharedUserGroup: Boolean

  "Who created the group."
  createdBy: String

  "Tag for the group."
  tag: String

  "List of members of the group."
  members: GroupMemberList

  "List of individual permissions this Group has to the Acl."
  permissions: [String]

  "The type of user this Acl applies to."
  userType: String
}

type AclList {
  "The number of hits for a given search."
  count: Int

  "Cursor that points to the/a specific position in a list of requested records."
  cursor: String

  "The list of acl search results."
  items: [Acl]
}

enum IdentityType {
  system
  provider
  catalog_item
}

input AclsInput {
  "The unique concept id assigned to the acl."
  conceptId: String

  "Cursor that points to the/a specific position in a list of requested records."
  cursor: String

  "The group concept id or permission to return acls for."
  groupPermission: JSON

  "Type of the object being controlled."
  identityType: IdentityType

  "The number of Acls to return."
  limit: Int

  "Zero based offset of individual results."
  offset: Int

  "User is an URS user name corresponding to a member of a group that has access to an Acl."
  permittedUser: String

  "Group that is permitted via this Acl."
  permittedGroup: String

  "List of groups that are permitted via this Acl."
  permittedGroups: [String]

  "Provider that owns the Acl"
  provider: String

  "The unique concept id of the object this acl is permitted access to."
  permittedConceptId: String

  "Matches Acls which have the given object identity target."
  target: String
}

type Query {
  "Query for Acls."
  acls(
    "Acls query parameters"
    params: AclsInput
  ): AclList!

  "Query for a single Acl."
  acl(
    "Acl query parameters"
    conceptId: String
  ): Acl
}

type AclMutationResponse {
  "The concept id of the draft."
  conceptId: String!

  "The revision id of the draft."
  revisionId: String!
}

type Mutation {
  "Create a new Acl."
  createAcl (
    "Identifies sets of catalog items (collections and granules) owned by a provider."
    catalogItemIdentity: JSON

    "Identifies a system level thing in the CMR."
    systemIdentity: JSON

    "Identifies a type of object owned by a specific provider."
    providerIdentity: JSON

    "List of groups and their permissions to the catalog item associated with this Acl."
    groupPermissions: JSON
  ): AclMutationResponse

  "Update an existing Acl."
  updateAcl (
    "Identifies sets of catalog items (collections and granules) owned by a provider."
    catalogItemIdentity: JSON

    "Identifies a system level thing in the CMR."
    systemIdentity: JSON

    "Identifies a type of object owned by a specific provider."
    providerIdentity: JSON

    "Concept ID of the Acl to be updated."
    conceptId: String!

    "List of groups and their permissions to the catalog item associated with this Acl."
    groupPermissions: JSON
  ): AclMutationResponse

  "Delete an existing Acl."
  deleteAcl (
    "Concept ID of the Acl to be deleted."
    conceptId: String!
  ): AclMutationResponse
}
